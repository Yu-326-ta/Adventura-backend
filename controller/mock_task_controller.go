// Code generated by MockGen. DO NOT EDIT.
// Source: controller/task_controller.go

// Package controller is a generated GoMock package.
package controller

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockITaskController is a mock of ITaskController interface.
type MockITaskController struct {
	ctrl     *gomock.Controller
	recorder *MockITaskControllerMockRecorder
}

// MockITaskControllerMockRecorder is the mock recorder for MockITaskController.
type MockITaskControllerMockRecorder struct {
	mock *MockITaskController
}

// NewMockITaskController creates a new mock instance.
func NewMockITaskController(ctrl *gomock.Controller) *MockITaskController {
	mock := &MockITaskController{ctrl: ctrl}
	mock.recorder = &MockITaskControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITaskController) EXPECT() *MockITaskControllerMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockITaskController) CreateTask(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTask", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockITaskControllerMockRecorder) CreateTask(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockITaskController)(nil).CreateTask), c)
}

// DeleteTask mocks base method.
func (m *MockITaskController) DeleteTask(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTask", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTask indicates an expected call of DeleteTask.
func (mr *MockITaskControllerMockRecorder) DeleteTask(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTask", reflect.TypeOf((*MockITaskController)(nil).DeleteTask), c)
}

// GetAllTasks mocks base method.
func (m *MockITaskController) GetAllTasks(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTasks", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetAllTasks indicates an expected call of GetAllTasks.
func (mr *MockITaskControllerMockRecorder) GetAllTasks(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTasks", reflect.TypeOf((*MockITaskController)(nil).GetAllTasks), c)
}

// GetTaskById mocks base method.
func (m *MockITaskController) GetTaskById(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskById", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetTaskById indicates an expected call of GetTaskById.
func (mr *MockITaskControllerMockRecorder) GetTaskById(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskById", reflect.TypeOf((*MockITaskController)(nil).GetTaskById), c)
}

// UpdateTask mocks base method.
func (m *MockITaskController) UpdateTask(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTask", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTask indicates an expected call of UpdateTask.
func (mr *MockITaskControllerMockRecorder) UpdateTask(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTask", reflect.TypeOf((*MockITaskController)(nil).UpdateTask), c)
}
