name: backend

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_flags: "--config=./.backend.yml ./..."
          fail_on_error: true
          reporter: "github-pr-review"
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -o todoapp main.go
      - name: Run tests
        run: go test -cover ./... -coverprofile=cover.out
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Go-results-1.20
          path: ./cover.out
          retention-days: 5
      - name: Upload Go build results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: todoapp
          path: ./todoapp
          retention-days: 5

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Upload Go build results
        uses: actions/download-artifact@v3
        with:
          name: todoapp
          path: ./todoapp
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -o todoapp main.go
      - name: "install ssh key"
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: "Transfer of Artifact"
        run: rsync -v todoapp ${host}@${username}:~/echo-rest-api/todoapp
        env:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/echo-rest-api
            sudo docker-compose up -d
            GO_ENV=dev ./todoapp
